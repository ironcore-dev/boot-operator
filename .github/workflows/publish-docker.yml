name: Build and publish Docker image

env:
  platforms: linux/amd64,linux/arm64

on:
  release:
    types:
      - published
  push:
    branches:
      - main
    tags:
      - v*
    paths-ignore:
      - 'docs/**'
      - '**/*.md'
  pull_request:
    paths-ignore:
      - 'docs/**'
      - '**/*.md'
    types: [labeled, unlabeled, opened, synchronize, reopened]

permissions:
  contents: read
  packages: write

jobs:
  publish-docker:
    name: Build and publish Docker image
    # Condition: Run on push to main, published release, OR PR with 'ok-to-image' label
    if: |
      github.event_name == 'push' || 
      (github.event_name == 'pull_request' && contains(github.event.pull_request.labels.*.name, 'ok-to-image')) ||
      (github.event_name == 'release' && github.event.action == 'published')
    runs-on: ubuntu-latest
    steps:
    - name: Check out repository
      uses: actions/checkout@v5
      with:
        ref: ${{ github.event.pull_request.head.sha }}
    - name: Collect metadata
      uses: docker/metadata-action@v5
      id: meta
      with:
        images: |
          ghcr.io/${{ github.repository_owner }}/boot-operator
        tags: |
          type=semver,pattern={{version}}
          type=schedule
          type=ref,event=branch
          type=ref,event=tag
          type=ref,event=pr
          type=sha
        flavor: |
          latest=${{ github.ref == 'refs/heads/main' }}
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v3
      with:
        image: tonistiigi/binfmt:latest
        platforms: ${{ env.platforms }}
    - name: Set up Docker Buildx context
      run: |
        docker context create builders
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      timeout-minutes: 5
      with:
        version: latest
        endpoint: builders
    - name: Log in to GHCR
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    - name: Build and push Docker image
      uses: docker/build-push-action@v6
      timeout-minutes: 10
      with:
        context: .
        platforms: ${{ env.platforms }}
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        push: ${{ github.event_name != 'pull_request' || contains(github.event.pull_request.labels.*.name, 'ok-to-publish') }}
